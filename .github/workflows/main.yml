name: Run Autotests and Publish Report

on:
  push:
    branches: [ main, master ]

# Права доступа остаются теми же
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  # ЗАДАНИЕ 1: Запуск тестов и генерация отчета
  run-and-generate-report:
    runs-on: ubuntu-latest
    steps:
      - name: 1. Get code from repository
        uses: actions/checkout@v4

      - name: 2. Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.27.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: 3. Run API and UI tests
        run: docker-compose run --rm tests
        env:
          BASE_URL: ${{ secrets.BASE_URL }}
          ADMIN_USERNAME: ${{ secrets.ADMIN_USERNAME }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}

      - name: 4. Generate Allure Report
        # Используем официальный action, он проще и надежнее для этой задачи
        uses: allure-framework/allure-action@v3
        if: always()
        with:
          results_path: allure-results
          report_path: allure-report

      # Шаг 5: Выгрузка отчета как артефакта, который будет доступен следующему заданию
      - name: 5. Upload report artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: allure-report
          path: allure-report
          retention-days: 1 # Хранить артефакт всего 1 день

  # ЗАДАНИЕ 2: Публикация отчета на GitHub Pages
  deploy-report:
    # Это задание зависит от успешного завершения предыдущего
    needs: run-and-generate-report
    runs-on: ubuntu-latest
    steps:
      # Шаг 1: Скачиваем артефакт, созданный в предыдущем задании
      - name: 1. Download report artifact
        uses: actions/download-artifact@v4
        with:
          name: allure-report

      # Шаг 2: Публикуем содержимое артефакта на GitHub Pages
      - name: 2. Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # Папка для публикации - это содержимое скачанного артефакта
          publish_dir: .
          # keep_files не нужен, так как мы каждый раз публикуем полный отчет