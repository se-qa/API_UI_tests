name: Run Autotests and Publish Report

on:
  push:
    branches: [ main, master ]

permissions:
  contents: write
  pages: write
  id-token: write
  packages: write

jobs:
  # ЗАДАНИЕ 1: Сборка и ПУБЛИКАЦИЯ Docker-образа
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 1. Get code from repository
        uses: actions/checkout@v4

      - name: 2. Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 3. Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # ИСПРАВЛЕНО: Создаем переменную с именем в нижнем регистре
      - name: 4. Create lower-case image name
        run: echo "IMAGE_NAME=ghcr.io/$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: 5. Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # ЗАДАНИЕ 2: Запуск тестов (параллельно)
  run-tests:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        test-group: [api, ui]
    steps:
      - name: 1. Create lower-case image name
        run: echo "IMAGE_NAME=ghcr.io/$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: 2. Run tests for ${{ matrix.test-group }}
        run: >
          docker run --rm --ipc=host --init
          -v $(pwd)/allure-results-${{ matrix.test-group }}:/app/allure-results
          -e BASE_URL=${{ secrets.BASE_URL }}
          -e ADMIN_USERNAME=${{ secrets.ADMIN_USERNAME }}
          -e ADMIN_PASSWORD=${{ secrets.ADMIN_PASSWORD }}
          ${{ env.IMAGE_NAME }}:latest
          pytest -m ${{ matrix.test-group }} --alluredir=allure-results

      - name: 3. Upload results for ${{ matrix.test-group }}
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: allure-results-${{ matrix.test-group }}
          path: allure-results-${{ matrix.test-group }}

  # ЗАДАНИЕ 3: Публикация отчета
  publish-report:
    needs: run-tests
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: 1. Download all test results
        uses: actions/download-artifact@v4
        with:
          path: allure-results
          merge-multiple: true

      - name: 2. Generate Allure Report
        uses: simple-elf/allure-report-action@v1.7
        with:
          allure_results: allure-results
          gh_pages: gh-pages
          allure_history: allure-history

      - name: 3. Upload artifact for GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./allure-history

  # ЗАДАНИЕ 4: Деплой на GitHub Pages
  deploy:
    needs: publish-report
    if: always()
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4