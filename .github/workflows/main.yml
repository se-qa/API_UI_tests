name: Run Autotests and Publish Report with History

on:
  push:
    branches: [ main, master ]

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  run-tests:
    runs-on: ubuntu-latest
    steps:
      - name: 1. Get code from repository
        uses: actions/checkout@v4

      - name: 2. Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.27.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: 3. Run API and UI tests
        # Этот шаг остается без изменений
        run: docker-compose run --rm tests
        env:
          BASE_URL: ${{ secrets.BASE_URL }}
          ADMIN_USERNAME: ${{ secrets.ADMIN_USERNAME }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}

      # Шаг 4: Генерация Allure-отчета с историей
      - name: 4. Generate Allure Report with history
        # Используем новый, продвинутый action
        uses: simple-elf/allure-report-action@v1.7
        if: always()
        id: allure-report # Даем ID, чтобы ссылаться на результат
        with:
          # Указываем, где лежат "сырые" результаты
          allure_results: allure-results
          # Указываем, где будет временная папка с историей
          gh_pages: gh-pages
          # Указываем, где будет готовый отчет для публикации
          allure_history: allure-history

      # Шаг 5: Публикация отчета на GitHub Pages
      - name: 5. Deploy Allure Report to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # Публикуем папку, которую подготовил предыдущий action
          publish_dir: allure-history
          # Указываем, что нужно держать историю коммитов в ветке gh-pages
          keep_files: true