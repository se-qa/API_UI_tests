name: Run Autotests and Publish Report

on:
  push:
    branches: [ main, master ]

permissions:
  contents: read # Чтение репозитория
  pages: write    # Запись на GitHub Pages
  id-token: write # Права для аутентификации

jobs:
  # ЗАДАНИЕ 1: Запуск тестов и создание отчета
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 1. Get code from repository
        uses: actions/checkout@v4

      - name: 2. Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.27.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: 3. Run API and UI tests
        # Мы не используем continue-on-error, чтобы job падал, если тесты падают
        run: docker-compose run --rm tests
        env:
          BASE_URL: ${{ secrets.BASE_URL }}
          ADMIN_USERNAME: ${{ secrets.ADMIN_USERNAME }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}

      - name: 4. Generate Allure Report
        # Используем простой и надежный action для генерации
        uses: simple-elf/allure-report-action@v1.7
        if: always()
        with:
          allure_results: allure-results
          # Готовый отчет будет в папке allure-history
          allure_history: allure-history

      # Шаг 5: Подготовка артефакта СПЕЦИАЛЬНО для GitHub Pages
      - name: 5. Upload artifact for GitHub Pages
        uses: actions/upload-pages-artifact@v3
        if: always()
        with:
          # Указываем папку с нашим сгенерированным отчетом
          path: ./allure-history

  # ЗАДАНИЕ 2: Публикация на GitHub Pages
  deploy:
    if: always()
    needs: build # Запускается после build
    # Даем права на деплой
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }} # Устанавливаем URL для окружения
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        # Используем ОФИЦИАЛЬНЫЙ action для деплоя
        uses: actions/deploy-pages@v4