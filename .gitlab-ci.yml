stages:
  - lint
  - build
  - test
  - report
  - deploy
  - notify

variables:
  IMAGE_NAME: $CI_REGISTRY_IMAGE
  IMAGE_TAG: $CI_COMMIT_SHA
  DOCKER_DRIVER: overlay2
  TEST_TYPE: "all"  # –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

# ---------- LINT ----------
lint:
  stage: lint
  image: python:3.13
  script:
    - pip install --upgrade pip
    - pip install flake8
    - flake8 .
  rules:
    - if: $CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "master"
    - if: $CI_PIPELINE_SOURCE == "web" && $TEST_TYPE != "none"
      when: manual
      allow_failure: true

# ---------- BUILD ----------
build:
  stage: build
  image: docker:28.0.0
  services: [docker:dind]
  before_script:
    - echo $CI_JOB_TOKEN | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
  script:
    - docker build -t $IMAGE_NAME:$IMAGE_TAG .
    - docker push $IMAGE_NAME:$IMAGE_TAG
    - docker tag $IMAGE_NAME:$IMAGE_TAG $IMAGE_NAME:latest
    - docker push $IMAGE_NAME:latest
  rules:
    - if: $CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "master"
    - if: $CI_PIPELINE_SOURCE == "web" && $TEST_TYPE != "none"
      when: manual

# ---------- MANUAL TESTS SELECTION ----------
manual-tests:
  stage: test
  image: docker:28.0.0
  services: [docker:dind]
  variables:
    TEST_COMMAND: >
      if [ "$TEST_TYPE" = "smoke" ]; then echo "-m smoke";
      elif [ "$TEST_TYPE" = "api" ]; then echo "-m api"; 
      elif [ "$TEST_TYPE" = "ui" ]; then echo "-m ui";
      elif [ "$TEST_TYPE" = "regression" ]; then echo "-m regression";
      else echo ""; fi
  script:
    - mkdir -p allure-results-manual
    - export DECODED_ADMIN_USERNAME=$(echo $ADMIN_USERNAME | base64 -d)
    - export TEST_CMD=$(eval $TEST_COMMAND)
    - echo "Running tests with command: pytest $TEST_CMD -n auto"
    - >
      docker run --rm --ipc=host --init
      -v $(pwd)/allure-results-manual:/app/allure-results
      -e BASE_URL=$BASE_URL
      -e ADMIN_USERNAME=$DECODED_ADMIN_USERNAME
      -e ADMIN_PASSWORD=$ADMIN_PASSWORD
      $IMAGE_NAME:latest
      pytest $TEST_CMD -n auto --alluredir=/app/allure-results
  artifacts:
    paths: [allure-results-manual]
    when: always
    expire_in: 7 days
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"
      when: manual
  allow_failure: true

# ---------- PUBLISH REPORT (–¥–ª—è —Ä—É—á–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤) ----------
publish-manual-report:
  stage: report
  image: openjdk:17-jdk-slim
  needs:
    - job: manual-tests
      artifacts: true
      optional: true
  when: always
  script:
    - apt-get update && apt-get install -y wget unzip
    - wget -q https://github.com/allure-framework/allure2/releases/download/2.34.1/allure-2.34.1.zip
    - unzip -q allure-2.34.1.zip
    - mkdir -p merged-results-manual
    - cp -r allure-results-manual/* merged-results-manual/ 2>/dev/null || true
    - ./allure-2.34.1/bin/allure generate merged-results-manual --clean -o allure-report-manual || true
  artifacts:
    paths: [allure-report-manual]
    expire_in: 7 days
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"
      when: manual

# ---------- DEPLOY PAGES (–¥–ª—è —Ä—É—á–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤) ----------
pages-manual:
  stage: deploy
  image: alpine:latest
  needs:
    - job: publish-manual-report
      optional: true
  when: always
  script:
    - mv allure-report-manual public || mkdir -p public
  artifacts:
    paths: [public]
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"
      when: manual

# ---------- TELEGRAM NOTIFICATION (–¥–ª—è —Ä—É—á–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤) ----------
notify-telegram-manual:
  stage: notify
  image: curlimages/curl:8.4.0
  needs:
    - job: pages-manual
      optional: true
  when: always
  script: |
    STATUS=$CI_JOB_STATUS
    REPORT_URL="https://$CI_PROJECT_NAMESPACE.gitlab.io/$CI_PROJECT_NAME/"
    
    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è —Ç–∏–ø–∞ —Ç–µ—Å—Ç–æ–≤
    case "$TEST_TYPE" in
      "smoke") TEST_TYPE_TEXT="Smoke Tests" ;;
      "api") TEST_TYPE_TEXT="API Tests" ;;
      "ui") TEST_TYPE_TEXT="UI Tests" ;;
      "regression") TEST_TYPE_TEXT="Regression Tests" ;;
      *) TEST_TYPE_TEXT="All Tests" ;;
    esac

    curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage" \
      -d chat_id="$TELEGRAM_CHAT_ID" \
      -d parse_mode=HTML \
      -d text="<b>‚úÖ Manual Pipeline Status:</b> ${STATUS}

    <b>üì¶ Repo:</b> <a href=\"${CI_PROJECT_URL}\">${CI_PROJECT_NAME}</a>
    <b>üåø Branch:</b> <code>${CI_COMMIT_REF_NAME}</code>
    <b>üß™ Test Type:</b> <code>${TEST_TYPE_TEXT}</code>
    <b>üìù Commit:</b> ${CI_COMMIT_MESSAGE}
    <b>üë§ Triggered by:</b> ${GITLAB_USER_NAME}
    
    <a href=\"${REPORT_URL}\">üìä Allure Report</a>"
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"
      when: manual

# ---------- –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ jobs (–æ—Å—Ç–∞–≤–ª—è–µ–º –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –∑–∞–ø—É—Å–∫–æ–≤) ----------
smoke-tests:
  stage: test
  image: docker:28.0.0
  services: [docker:dind]
  needs: [build]
  script:
    - mkdir -p allure-results-smoke
    - export DECODED_ADMIN_USERNAME=$(echo $ADMIN_USERNAME | base64 -d)
    - >
      docker run --rm --ipc=host --init
      -v $(pwd)/allure-results-smoke:/app/allure-results
      -e BASE_URL=$BASE_URL
      -e ADMIN_USERNAME=$DECODED_ADMIN_USERNAME
      -e ADMIN_PASSWORD=$ADMIN_PASSWORD
      $IMAGE_NAME:$IMAGE_TAG
      pytest -m smoke -n auto --alluredir=/app/allure-results
  artifacts:
    paths: [allure-results-smoke]
    when: always
    expire_in: 7 days
  rules:
    - if: $CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "master"

run-tests-parallel:
  stage: test
  image: docker:28.0.0
  services: [docker:dind]
  needs: [smoke-tests]
  parallel:
    matrix:
      - TEST_GROUP: api
      - TEST_GROUP: ui
  script:
    - mkdir -p allure-results-${TEST_GROUP}
    - export DECODED_ADMIN_USERNAME=$(echo $ADMIN_USERNAME | base64 -d)
    - >
      docker run --rm --ipc=host --init
      -v $(pwd)/allure-results-${TEST_GROUP}:/app/allure-results
      -e BASE_URL=$BASE_URL
      -e ADMIN_USERNAME=$DECODED_ADMIN_USERNAME
      -e ADMIN_PASSWORD=$ADMIN_PASSWORD
      $IMAGE_NAME:$IMAGE_TAG
      pytest -m $TEST_GROUP -n auto --alluredir=/app/allure-results
  artifacts:
    paths:
      - allure-results-${TEST_GROUP}
    when: always
    expire_in: 7 days
  rules:
    - if: $CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "master"

publish-report:
  stage: report
  image: openjdk:17-jdk-slim
  needs:
    - job: smoke-tests
      artifacts: true
      optional: true
    - job: run-tests-parallel
      artifacts: true
      optional: true
  when: always
  script:
    - apt-get update && apt-get install -y wget unzip
    - wget -q https://github.com/allure-framework/allure2/releases/download/2.34.1/allure-2.34.1.zip
    - unzip -q allure-2.34.1.zip
    - mkdir -p merged-results
    - cp -r allure-results-smoke/* merged-results/  || true
    - cp -r allure-results-api/*   merged-results/  || true
    - cp -r allure-results-ui/*    merged-results/  || true
    - ./allure-2.34.1/bin/allure generate merged-results --clean -o allure-report || true
  artifacts:
    paths: [allure-report]
    expire_in: 7 days
  rules:
    - if: $CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "master"

pages:
  stage: deploy
  image: alpine:latest
  needs:
    - job: publish-report
      optional: true
  when: always
  script:
    - mv allure-report public || mkdir -p public
  artifacts:
    paths: [public]
  rules:
    - if: $CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "master"

notify-telegram:
  stage: notify
  image: curlimages/curl:8.4.0
  needs:
    - job: pages
      optional: true
  when: always
  script: |
    STATUS=$CI_JOB_STATUS
    REPORT_URL="https://$CI_PROJECT_NAMESPACE.gitlab.io/$CI_PROJECT_NAME/"
    COMMIT_MSG=$(printf "%s" "$CI_COMMIT_MESSAGE" | sed -r 's/([_*`()~>#+=|{}.!-])/\\\1/g')

    curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage" \
      -d chat_id="$TELEGRAM_CHAT_ID" \
      -d parse_mode=HTML \
      -d text="<b>‚úÖ Pipeline Status:</b> ${STATUS}

    <b>üì¶ Repo:</b> <a href=\"${CI_PROJECT_URL}\">${CI_PROJECT_NAME}</a>
    <b>üåø Branch:</b> <code>${CI_COMMIT_REF_NAME}</code>
    <b>üìù Commit:</b> ${CI_COMMIT_MESSAGE}
    <b>üë§ Triggered by:</b> ${GITLAB_USER_NAME}
    
    <a href=\"${REPORT_URL}\">üìä Allure Report</a>"
  rules:
    - if: $CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "master"