stages:
  - lint
  - build
  - test
  - report
  - deploy
  - notify

variables:
  IMAGE_NAME: $CI_REGISTRY_IMAGE
  IMAGE_TAG: $CI_COMMIT_SHA
  DOCKER_DRIVER: overlay2

# ---------------- LINT ----------------
lint:
  stage: lint
  image: python:3.13
  script:
    - pip install --upgrade pip
    - pip install flake8
    - flake8 .
  only:
    - main
    - master

# ---------------- BUILD ----------------
build:
  stage: build
  image: docker:28.0.0
  services:
    - docker:dind
  before_script:
    - echo $CI_JOB_TOKEN | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
  script:
    - docker build -t $IMAGE_NAME:$IMAGE_TAG .
    - docker push $IMAGE_NAME:$IMAGE_TAG
    - docker tag $IMAGE_NAME:$IMAGE_TAG $IMAGE_NAME:latest
    - docker push $IMAGE_NAME:latest
  only:
    - main
    - master

# ---------------- SMOKE TESTS ----------------
smoke-tests:
  stage: test
  image: docker:28.0.0
  services:
    - docker:dind
  needs: [build]
  script:
    - docker run --rm --ipc=host --init \
        -v $(pwd)/allure-results-smoke:/app/allure-results \
        -e BASE_URL=$BASE_URL \
        -e ADMIN_USERNAME=$ADMIN_USERNAME \
        -e ADMIN_PASSWORD=$ADMIN_PASSWORD \
        $IMAGE_NAME:$IMAGE_TAG \
        pytest -m smoke -n auto --alluredir=allure-results
  artifacts:
    paths:
      - allure-results-smoke
    when: always
    expire_in: 7 days

# ---------------- PARALLEL TESTS ----------------
run-tests-parallel:
  stage: test
  image: docker:28.0.0
  services:
    - docker:dind
  needs: [smoke-tests]
  parallel:
    matrix:
      - TEST_GROUP: api
      - TEST_GROUP: ui
  script:
    - docker run --rm --ipc=host --init \
        -v $(pwd)/allure-results-${TEST_GROUP}:/app/allure-results \
        -e BASE_URL=$BASE_URL \
        -e ADMIN_USERNAME=$ADMIN_USERNAME \
        -e ADMIN_PASSWORD=$ADMIN_PASSWORD \
        $IMAGE_NAME:$IMAGE_TAG \
        pytest -m $TEST_GROUP -n auto --alluredir=allure-results
  artifacts:
    paths:
      - allure-results-${TEST_GROUP}
    when: always
    expire_in: 7 days

# ---------------- PUBLISH REPORT ----------------
publish-report:
  stage: report
  image: openjdk:17-jdk-slim
  needs: [run-tests-parallel]
  script:
    - apt-get update && apt-get install -y wget unzip
    - wget https://github.com/allure-framework/allure2/releases/download/2.34.1/allure-2.34.1.zip
    - unzip allure-2.34.1.zip
    - ./allure-2.34.1/bin/allure generate allure-results* --clean -o allure-report
  artifacts:
    paths:
      - allure-report
    expire_in: 7 days
  when: always

# ---------------- DEPLOY TO GITLAB PAGES ----------------
pages:
  stage: deploy
  image: alpine:latest
  needs: [publish-report]
  script:
    - mv allure-report public
  artifacts:
    paths:
      - public
  only:
    - main
    - master

# ---------------- TELEGRAM NOTIFY1 ----------------
notify-telegram:
  stage: notify
  image: curlimages/curl:8.4.0
  needs: [pages]
  script: |
    STATUS=$CI_JOB_STATUS
    REPORT_URL="https://$CI_PROJECT_NAMESPACE.gitlab.io/$CI_PROJECT_NAME/"
    COMMIT_MSG=$(echo "$CI_COMMIT_MESSAGE" | sed -E 's/"/\\"/g')

    curl -s -X POST https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage \
      -d chat_id=$TELEGRAM_CHAT_ID \
      -d parse_mode=Markdown \
      -d text="*‚úÖ Pipeline Status:* $STATUS

    *üì¶ Repo:* [$CI_PROJECT_NAME]($CI_PROJECT_URL)
    *üåø Branch:* \`$CI_COMMIT_REF_NAME\`
    *üìù Commit:* $COMMIT_MSG
    *üë§ Triggered by:* $GITLAB_USER_NAME

    [ üìä Allure Report ]($REPORT_URL)"
  when: always
